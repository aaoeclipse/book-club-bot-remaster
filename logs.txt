
> bookclub-remastered@1.0.0 start:dev /home/eclipse/Documents/PersonalProjects/bookclub-remastered
> npx nodemon

[33m[nodemon] 3.0.2[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): src/**/*[39m
[33m[nodemon] watching extensions: ts,js[39m
[32m[nodemon] starting `npx ts-node ./src/index.ts`[39m
Ready! Logged in as bookclub#5528
ðŸš€ ~ file: interface.ts:19 ~ addBook ~ book: { title: 'Mice and Men', createdBy: 1 }
ðŸš€ ~ file: infrastructure.ts:7 ~ addBookDb ~ book: { title: 'Mice and Men', createdBy: 1 }
ðŸš€ ~ file: infrastructure.ts:5 ~ createElection ~ user_id: 1
ðŸš€ ~ file: interface.ts:11 ~ makeElections ~ election: { id: 1, startedBy: 1, finish: false, finishDate: null }
ðŸš€ ~ file: interface.ts:93 ~ addBookToElection ~ id: 1
ðŸš€ ~ file: interface.ts:98 ~ addBookToElection ~ election: { id: 1, startedBy: 1, finish: false, finishDate: null }
ðŸš€ ~ file: infrastructure.ts:41 ~ getBookOnElection ~ id: 1
ðŸš€ ~ file: infrastructure.ts:37 ~ addBookToElection ~ id: 1
ðŸš€ ~ file: infrastructure.ts:41 ~ getBookOnElection ~ id: 1
ðŸš€ ~ file: infrastructure.ts:6 ~ getVoteFromUserToBook ~ userid + bookid: 2 1
ðŸš€ ~ file: infrastructure.ts:23 ~ newUserVote ~ userid: number, bookid: number, electionid: number: 2 1 1
ðŸš€ ~ file: infrastructure.ts:27 ~ getAllBooksFromElectionDb ~ electionid: 1
ðŸš€ ~ file: infrastructure.ts:40 ~ getAllBooksFromElectionDb ~ votes: [ { _count: { bookid: 1 }, bookid: 1 } ]
ðŸš€ ~ file: interface.ts:49 ~ listBooks ~ books: [
  {
    id: 1,
    bookid: 1,
    electionid: 1,
    book: {
      id: 1,
      title: 'Mice and Men',
      author: null,
      description: null,
      createdBy: 1,
      chapters: null
    },
    votes: 1
  }
]
ðŸš€ ~ file: infrastructure.ts:41 ~ getBookOnElection ~ id: 1
ðŸš€ ~ file: infrastructure.ts:6 ~ getVoteFromUserToBook ~ userid + bookid: 1 1
ðŸš€ ~ file: infrastructure.ts:23 ~ newUserVote ~ userid: number, bookid: number, electionid: number: 1 1 1
ðŸš€ ~ file: infrastructure.ts:23 ~ listBooksDb ~ START
ðŸš€ ~ file: infrastructure.ts:23 ~ listBooksDb ~ START
ðŸš€ ~ file: infrastructure.ts:27 ~ getAllBooksFromElectionDb ~ electionid: 1
ðŸš€ ~ file: infrastructure.ts:40 ~ getAllBooksFromElectionDb ~ votes: [ { _count: { bookid: 2 }, bookid: 1 } ]
ðŸš€ ~ file: interface.ts:49 ~ listBooks ~ books: [
  {
    id: 1,
    bookid: 1,
    electionid: 1,
    book: {
      id: 1,
      title: 'Mice and Men',
      author: null,
      description: null,
      createdBy: 1,
      chapters: null
    },
    votes: 2
  }
]
ðŸš€ ~ file: infrastructure.ts:27 ~ getAllBooksFromElectionDb ~ electionid: 1
ðŸš€ ~ file: infrastructure.ts:40 ~ getAllBooksFromElectionDb ~ votes: [ { _count: { bookid: 2 }, bookid: 1 } ]
ðŸš€ ~ file: interface.ts:49 ~ listBooks ~ books: [
  {
    id: 1,
    bookid: 1,
    electionid: 1,
    book: {
      id: 1,
      title: 'Mice and Men',
      author: null,
      description: null,
      createdBy: 1,
      chapters: null
    },
    votes: 2
  }
]
ðŸš€ ~ file: interface.ts:31 ~ finishElections ~ election: { id: 1, startedBy: 1, finish: false, finishDate: null }
ðŸš€ ~ file: infrastructure.ts:27 ~ getAllBooksFromElectionDb ~ electionid: 1
ðŸš€ ~ file: infrastructure.ts:40 ~ getAllBooksFromElectionDb ~ votes: [ { _count: { bookid: 2 }, bookid: 1 } ]
ðŸš€ ~ file: interface.ts:40 ~ finishElections ~ books: [
  {
    id: 1,
    bookid: 1,
    electionid: 1,
    book: {
      id: 1,
      title: 'Mice and Men',
      author: null,
      description: null,
      createdBy: 1,
      chapters: null
    },
    votes: 2
  }
]
ðŸš€ ~ file: interface.ts:42 ~ finishElections ~ maxVoteBook: {
  id: 1,
  bookid: 1,
  electionid: 1,
  book: {
    id: 1,
    title: 'Mice and Men',
    author: null,
    description: null,
    createdBy: 1,
    chapters: null
  },
  votes: 2
}
ðŸš€ ~ file: interface.ts:46 ~ finishElections ~ activeBook: { id: 1, wonElection: 1, bookid: 1, active: true }
ðŸš€ ~ file: infrastructure.ts:56 ~ closeElectionDb ~ electionid: 1
[+] New Chapter 1 created!
[+] New Chapter 2 created!
[+] New Chapter 3 created!
ðŸš€ ~ updateProgress Started!
ðŸš€ ~ updateProgress Started!
[+] New Chapter 4 created!
[+] New Chapter 5 created!
ðŸš€ ~ updateProgress Started!
[+] New Chapter 6 created!
[+] New Chapter 7 created!
[+] New Chapter 8 created!
[+] New Chapter 9 created!
[+] New Chapter 10 created!
ðŸš€ ~ file: infrastructure.ts:5 ~ createElection ~ user_id: 1
ðŸš€ ~ file: interface.ts:11 ~ makeElections ~ election: { id: 2, startedBy: 1, finish: false, finishDate: null }
ðŸš€ ~ file: interface.ts:31 ~ finishElections ~ election: { id: 2, startedBy: 1, finish: false, finishDate: null }
ðŸš€ ~ file: infrastructure.ts:27 ~ getAllBooksFromElectionDb ~ electionid: 2
ðŸš€ ~ file: infrastructure.ts:40 ~ getAllBooksFromElectionDb ~ votes: []
ðŸš€ ~ file: interface.ts:40 ~ finishElections ~ books: []
ðŸš€ ~ file: interface.ts:42 ~ finishElections ~ maxVoteBook: undefined
ðŸš€ ~ file: interface.ts:19 ~ addBook ~ book: { title: 'tester', createdBy: 2 }
ðŸš€ ~ file: infrastructure.ts:7 ~ addBookDb ~ book: { title: 'tester', createdBy: 2 }
ðŸš€ ~ file: infrastructure.ts:23 ~ listBooksDb ~ START
ðŸš€ ~ file: interface.ts:93 ~ addBookToElection ~ id: 2
ðŸš€ ~ file: interface.ts:98 ~ addBookToElection ~ election: { id: 2, startedBy: 1, finish: false, finishDate: null }
ðŸš€ ~ file: infrastructure.ts:41 ~ getBookOnElection ~ id: 2
ðŸš€ ~ file: infrastructure.ts:37 ~ addBookToElection ~ id: 2
ðŸš€ ~ file: infrastructure.ts:41 ~ getBookOnElection ~ id: 2
ðŸš€ ~ file: infrastructure.ts:6 ~ getVoteFromUserToBook ~ userid + bookid: 2 2
ðŸš€ ~ file: infrastructure.ts:23 ~ newUserVote ~ userid: number, bookid: number, electionid: number: 2 2 2
ðŸš€ ~ file: infrastructure.ts:27 ~ getAllBooksFromElectionDb ~ electionid: 2
ðŸš€ ~ file: infrastructure.ts:40 ~ getAllBooksFromElectionDb ~ votes: [ { _count: { bookid: 1 }, bookid: 2 } ]
ðŸš€ ~ file: interface.ts:49 ~ listBooks ~ books: [
  {
    id: 2,
    bookid: 2,
    electionid: 2,
    book: {
      id: 2,
      title: 'tester',
      author: null,
      description: null,
      createdBy: 2,
      chapters: null
    },
    votes: 1
  }
]
ðŸš€ ~ file: infrastructure.ts:41 ~ getBookOnElection ~ id: 2
ðŸš€ ~ file: infrastructure.ts:6 ~ getVoteFromUserToBook ~ userid + bookid: 2 2
ðŸš€ ~ file: infrastructure.ts:15 ~ removeVote ~ voteid: 3
ðŸš€ ~ file: infrastructure.ts:27 ~ getAllBooksFromElectionDb ~ electionid: 2
ðŸš€ ~ file: infrastructure.ts:40 ~ getAllBooksFromElectionDb ~ votes: []
ðŸš€ ~ file: interface.ts:49 ~ listBooks ~ books: [
  {
    id: 2,
    bookid: 2,
    electionid: 2,
    book: {
      id: 2,
      title: 'tester',
      author: null,
      description: null,
      createdBy: 2,
      chapters: null
    },
    votes: 0
  }
]
ðŸš€ ~ file: interface.ts:31 ~ finishElections ~ election: { id: 2, startedBy: 1, finish: false, finishDate: null }
ðŸš€ ~ file: infrastructure.ts:27 ~ getAllBooksFromElectionDb ~ electionid: 2
ðŸš€ ~ file: infrastructure.ts:40 ~ getAllBooksFromElectionDb ~ votes: []
ðŸš€ ~ file: interface.ts:40 ~ finishElections ~ books: [
  {
    id: 2,
    bookid: 2,
    electionid: 2,
    book: {
      id: 2,
      title: 'tester',
      author: null,
      description: null,
      createdBy: 2,
      chapters: null
    },
    votes: 0
  }
]
ðŸš€ ~ file: interface.ts:42 ~ finishElections ~ maxVoteBook: {
  id: 2,
  bookid: 2,
  electionid: 2,
  book: {
    id: 2,
    title: 'tester',
    author: null,
    description: null,
    createdBy: 2,
    chapters: null
  },
  votes: 0
}
ðŸš€ ~ file: interface.ts:46 ~ finishElections ~ activeBook: { id: 2, wonElection: 2, bookid: 2, active: true }
ðŸš€ ~ file: infrastructure.ts:56 ~ closeElectionDb ~ electionid: 2
[+] New Chapter 1 created!
[+] New Chapter 2 created!
[+] New Chapter 3 created!
ðŸš€ ~ updateProgress Started!
[+] New Chapter 4 created!
[+] New Chapter 5 created!
[+] New Chapter 6 created!
[+] New Chapter 7 created!
[+] New Chapter 8 created!
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `npx ts-node ./src/index.ts`[39m
Ready! Logged in as bookclub#5528
ðŸš€ ~ file: infrastructure.ts:23 ~ listBooksDb ~ START
/home/eclipse/Documents/PersonalProjects/bookclub-remastered/node_modules/.pnpm/@discordjs+rest@2.2.0/node_modules/@discordjs/rest/src/lib/handlers/Shared.ts:148
			throw new DiscordAPIError(data, 'code' in data ? data.code : data.error, status, method, url, requestData);
         ^
DiscordAPIError[10062]: Unknown interaction
    at handleErrors (/home/eclipse/Documents/PersonalProjects/bookclub-remastered/node_modules/.pnpm/@discordjs+rest@2.2.0/node_modules/@discordjs/rest/src/lib/handlers/Shared.ts:148:10)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async BurstHandler.runRequest (/home/eclipse/Documents/PersonalProjects/bookclub-remastered/node_modules/.pnpm/@discordjs+rest@2.2.0/node_modules/@discordjs/rest/src/lib/handlers/BurstHandler.ts:143:20)
    at async _REST.request (/home/eclipse/Documents/PersonalProjects/bookclub-remastered/node_modules/.pnpm/@discordjs+rest@2.2.0/node_modules/@discordjs/rest/src/lib/REST.ts:211:20)
    at async ChatInputCommandInteraction.reply (/home/eclipse/Documents/PersonalProjects/bookclub-remastered/node_modules/.pnpm/discord.js@14.14.1/node_modules/discord.js/src/structures/interfaces/InteractionResponses.js:111:5) {
  requestBody: { files: [], json: { type: 4, data: [Object] } },
  rawError: { message: 'Unknown interaction', code: 10062 },
  code: 10062,
  status: 404,
  method: 'POST',
  url: 'https://discord.com/api/v10/interactions/1198733919462367292/aW50ZXJhY3Rpb246MTE5ODczMzkxOTQ2MjM2NzI5MjpIRVJLRzJkSGFtVFM2TkI4eW0yYUxnMDFFcXdBVFc2SDN1b0lNTm9ENzhQMTFVSkdiODdxMGhLWThhVEs5T3FBMWFOQ2tlVEFFVTRLNnZlVVlWejR0bjZnUWhnTDN2Y1RYamlUMzVTRzRiUDZ4SW1EZEdPSDdxM1VyTWx6ZURwRw/callback'
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `npx ts-node ./src/index.ts`[39m
Ready! Logged in as bookclub#5528
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `npx ts-node ./src/index.ts`[39m
Ready! Logged in as bookclub#5528
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `npx ts-node ./src/index.ts`[39m
Ready! Logged in as bookclub#5528
ðŸš€ ~ file: interface.ts:130 ~ updateBook ~ bookid: 1
ðŸš€ ~ file: interface.ts:130 ~ updateBook ~ bookid: -1
ðŸš€ ~ file: interface.ts:93 ~ addBookToElection ~ id: -1
ðŸš€ ~ file: interface.ts:98 ~ addBookToElection ~ election: null
ðŸš€ ~ file: infrastructure.ts:23 ~ listBooksDb ~ START
ðŸš€ ~ file: infrastructure.ts:5 ~ createElection ~ user_id: 2
ðŸš€ ~ file: interface.ts:11 ~ makeElections ~ election: { id: 3, startedBy: 2, finish: false, finishDate: null }
ðŸš€ ~ file: interface.ts:93 ~ addBookToElection ~ id: -1
ðŸš€ ~ file: interface.ts:98 ~ addBookToElection ~ election: { id: 3, startedBy: 2, finish: false, finishDate: null }
ðŸš€ ~ file: infrastructure.ts:41 ~ getBookOnElection ~ id: -1
ðŸš€ ~ file: infrastructure.ts:37 ~ addBookToElection ~ id: -1
/home/eclipse/Documents/PersonalProjects/bookclub-remastered/node_modules/.pnpm/@prisma+client@5.8.1_prisma@5.8.1/node_modules/@prisma/client/runtime/library.js:125
`)}var Do=({clientMethod:e,activeProvider:t,driverAdapterProvider:r})=>n=>{r!==void 0&&(t=r);let i="",o;if(Array.isArray(n)){let[s,...a]=n;i=s,o={values:Vr(a||[]),__prismaRawParameters__:!0}}else switch(t){case"sqlite":case"mysql":{i=n.sql,o={values:Vr(n.values),__prismaRawParameters__:!0};break}case"cockroachdb":case"postgresql":case"postgres":{i=n.text,o={values:Vr(n.values),__prismaRawParameters__:!0};break}case"sqlserver":{i=Ql(n),o={values:Vr(n.values),__prismaRawParameters__:!0};break}default:throw new Error(`The ${t} provider does not support ${e}`)}return o?.values?Wl(`prisma.${e}(${i}, ${o.values})`):Wl(`prisma.${e}(${i})`),{query:i,parameters:o}},zl={requestArgsToMiddlewareArgs(e){return[e.strings,...e.values]},middlewareArgsToRequestArgs(e){let[t,...r]=e;return new fe(t,r)}},Yl={requestArgsToMiddlewareArgs(e){return[e]},middlewareArgsToRequestArgs(e){return e[0]}};function No(e){return function(r){let n,i=(o=e)=>{try{return o===void 0||o?.kind==="itx"?n??(n=Zl(r(o))):Zl(r(o))}catch(s){return Promise.reject(s)}};return{then(o,s){return i().then(o,s)},catch(o){return i().catch(o)},finally(o){return i().finally(o)},requestTransaction(o){let s=i(o);return s.requestTransaction?s.requestTransaction(o):s},[Symbol.toStringTag]:"PrismaPromise"}}}function Zl(e){return typeof e.then=="function"?e:Promise.resolve(e)}var Xl={isEnabled(){return!1},getTraceParent(){return"00-10-10-00"},async createEngineSpan(){},getActiveContext(){},runInChildSpan(e,t){return t()}},Lo=class{isEnabled(){return this.getGlobalTracingHelper().isEnabled()}getTraceParent(t){return this.getGlobalTracingHelper().getTraceParent(t)}createEngineSpan(t){return this.getGlobalTracingHelper().createEngineSpan(t)}getActiveContext(){return this.getGlobalTracingHelper().getActiveContext()}runInChildSpan(t,r){return this.getGlobalTracingHelper().runInChildSpan(t,r)}getGlobalTracingHelper(){return globalThis.PRISMA_INSTRUMENTATION?.helper??Xl}};function eu(e){return e.includes("tracing")?new Lo:Xl}function tu(e,t=()=>{}){let r,n=new Promise(i=>r=i);return{then(i){return--e===0&&r(t()),i?.(n)}}}function ru(e){return typeof e=="string"?e:e.reduce((t,r)=>{let n=typeof r=="string"?r:r.level;return n==="query"?t:t&&(r==="info"||t==="info")?"info":n},void 0)}var ri=class{constructor(){this._middlewares=[]}use(t){this._middlewares.push(t)}get(t){return this._middlewares[t]}has(t){return!!this._middlewares[t]}length(){return this._middlewares.length}};var iu=F(Vi());function ni(e){return typeof e.batchRequestIdx=="number"}function ii(e){return e===null?e:Array.isArray(e)?e.map(ii):typeof e=="object"?Eg(e)?Pg(e):Ot(e,ii):e}function Eg(e){return e!==null&&typeof e=="object"&&typeof e.$type=="string"}function Pg({$type:e,value:t}){switch(e){case"BigInt":return BigInt(t);case"Bytes":return Buffer.from(t,"base64");case"DateTime":return new Date(t);case"Decimal":return new Ne(t);case"Json":return JSON.parse(t);default:yt(t,"Unknown tagged value")}}function nu(e){if(e.action!=="findUnique"&&e.action!=="findUniqueOrThrow")return;let t=[];return e.modelName&&t.push(e.modelName),e.query.arguments&&t.push($o(e.query.arguments)),t.push($o(e.query.selection)),t.join("")}function $o(e){return`(${Object.keys(e).sort().map(r=>{let n=e[r];return typeof n=="object"&&n!==null?`(${r} ${$o(n)})`:r}).join(" ")})`}var vg={aggregate:!1,aggregateRaw:!1,createMany:!0,createOne:!0,deleteMany:!0,deleteOne:!0,executeRaw:!0,findFirst:!1,findFirstOrThrow:!1,findMany:!1,findRaw:!1,findUnique:!1,findUniqueOrThrow:!1,groupBy:!1,queryRaw:!1,runCommandRaw:!0,updateMany:!0,updateOne:!0,upsertOne:!0};function qo(e){return vg[e]}var oi=class{constructor(t){this.options=t;this.tickActive=!1;this.batches={}}request(t){let r=this.options.batchBy(t);return r?(this.batches[r]||(this.batches[r]=[],this.tickActive||(this.tickActive=!0,process.nextTick(()=>{this.dispatchBatches(),this.tickActive=!1}))),new Promise((n,i)=>{this.batches[r].push({request:t,resolve:n,reject:i})})):this.options.singleLoader(t)}dispatchBatches(){for(let t in this.batches){let r=this.batches[t];delete this.batches[t],r.length===1?this.options.singleLoader(r[0].request).then(n=>{n instanceof Error?r[0].reject(n):r[0].resolve(n)}).catch(n=>{r[0].reject(n)}):(r.sort((n,i)=>this.options.batchOrder(n.request,i.request)),this.options.batchLoader(r.map(n=>n.request)).then(n=>{if(n instanceof Error)for(let i=0;i<r.length;i++)r[i].reject(n);else for(let i=0;i<r.length;i++){let o=n[i];o instanceof Error?r[i].reject(o):r[i].resolve(o)}}).catch(n=>{for(let i=0;i<r.length;i++)r[i].reject(n)}))}}get[Symbol.toStringTag](){return"DataLoader"}};var Tg=$("prisma:client:request_handler"),si=class{constructor(t,r){this.logEmitter=r,this.client=t,this.dataloader=new oi({batchLoader:Ga(async({requests:n,customDataProxyFetch:i})=>{let{transaction:o,otelParentCtx:s}=n[0],a=n.map(p=>p.protocolQuery),l=this.client._tracingHelper.getTraceParent(s),u=n.some(p=>qo(p.protocolQuery.action));return(await this.client._engine.requestBatch(a,{traceparent:l,transaction:_g(o),containsWrite:u,customDataProxyFetch:i})).map((p,d)=>{if(p instanceof Error)return p;try{return this.mapQueryEngineResult(n[d],p)}catch(f){return f}})}),singleLoader:async n=>{let i=n.transaction?.kind==="itx"?ou(n.transaction):void 0,o=await this.client._engine.request(n.protocolQuery,{traceparent:this.client._tracingHelper.getTraceParent(),interactiveTransaction:i,isWrite:qo(n.protocolQuery.action),customDataProxyFetch:n.customDataProxyFetch});return this.mapQueryEngineResult(n,o)},batchBy:n=>n.transaction?.id?`transaction-${n.transaction.id}`:nu(n.protocolQuery),batchOrder(n,i){return n.transaction?.kind==="batch"&&i.transaction?.kind==="batch"?n.transaction.index-i.transaction.index:0}})}async request(t){try{return await this.dataloader.request(t)}catch(r){let{clientMethod:n,callsite:i,transaction:o,args:s,modelName:a}=t;this.handleAndLogRequestError({error:r,clientMethod:n,callsite:i,transaction:o,args:s,modelName:a})}}mapQueryEngineResult({dataPath:t,unpacker:r},n){let i=n?.data,o=n?.elapsed,s=this.unpack(i,t,r);return process.env.PRISMA_CLIENT_GET_TIME?{data:s,elapsed:o}:s}handleAndLogRequestError(t){try{this.handleRequestError(t)}catch(r){throw this.logEmitter&&this.logEmitter.emit("error",{message:r.message,target:t.clientMethod,timestamp:new Date}),r}}handleRequestError({error:t,clientMethod:r,callsite:n,transaction:i,args:o,modelName:s}){if(Tg(t),Cg(t,i)||t instanceof Ve)throw t;if(t instanceof H&&Ag(t)){let l=su(t.meta);ti({args:o,errors:[l],callsite:n,errorFormat:this.client._errorFormat,originalMethod:r,clientVersion:this.client._clientVersion})}let a=t.message;if(n&&(a=Qt({callsite:n,originalMethod:r,isPanic:t.isPanic,showColors:this.client._errorFormat==="pretty",message:a})),a=this.sanitizeMessage(a),t.code){let l=s?{modelName:s,...t.meta}:t.meta;throw new H(a,{code:t.code,clientVersion:this.client._clientVersion,meta:l,batchRequestIdx:t.batchRequestIdx})}else{if(t.isPanic)throw new be(a,this.client._clientVersion);if(t instanceof W)throw new W(a,{clientVersion:this.client._clientVersion,batchRequestIdx:t.batchRequestIdx});if(t instanceof k)throw new k(a,this.client._clientVersion);if(t instanceof be)throw new be(a,this.client._clientVersion)}throw t.clientVersion=this.client._clientVersion,t}sanitizeMessage(t){return this.client._errorFormat&&this.client._errorFormat!=="pretty"?(0,iu.default)(t):t}unpack(t,r,n){if(!t||(t.data&&(t=t.data),!t))return t;let i=Object.values(t)[0],o=r.filter(a=>a!=="select"&&a!=="include"),s=ii(uo(i,o));return n?n(s):s}get[Symbol.toStringTag](){return"RequestHandler"}};function _g(e){if(e){if(e.kind==="batch")return{kind:"batch",options:{isolationLevel:e.isolationLevel}};if(e.kind==="itx")return{kind:"itx",options:ou(e)};yt(e,"Unknown transaction kind")}}function ou(e){return{id:e.id,payload:e.payload}}function Cg(e,t){return ni(e)&&t?.kind==="batch"&&e.batchRequestIdx!==t.index}function Ag(e){return e.code==="P2009"||e.code==="P2012"}function su(e){if(e.kind==="Union")return{kind:"Union",errors:e.errors.map(su)};if(Array.isArray(e.selectionPath)){let[,...t]=e.selectionPath;return{...e,selectionPath:t}}return e}var au="5.8.1";var lu=au;function uu(e){return e.map(t=>{let r={};for(let n of Object.keys(t))r[n]=cu(t[n]);return r})}function cu({prisma__type:e,prisma__value:t}){switch(e){case"bigint":return BigInt(t);case"bytes":return Buffer.from(t,"base64");case"decimal":return new Ne(t);case"datetime":case"date":return new Date(t);case"time":return new Date(`1970-01-01T${t}Z`);case"array":return t.map(cu);default:return t}}var fu=F(Io());var U=class extends Error{constructor(t){super(t+`

PrismaClientKnownRequestError: 
Invalid `prisma.booksElection.create()` invocation in
/home/eclipse/Documents/PersonalProjects/bookclub-remastered/src/commands/commands/books/infrastructure.ts:38:54

  35 
  36 export const addBookToElectionDb = async (currElection: number, id: number) => {
  37   console.log("ðŸš€ ~ file: infrastructure.ts:37 ~ addBookToElection ~ id:", id);
â†’ 38   const newBookElection = await prisma.booksElection.create(
Foreign key constraint failed on the field: `foreign key`
    at si.handleRequestError (/home/eclipse/Documents/PersonalProjects/bookclub-remastered/node_modules/.pnpm/@prisma+client@5.8.1_prisma@5.8.1/node_modules/@prisma/client/runtime/library.js:125:6817)
    at si.handleAndLogRequestError (/home/eclipse/Documents/PersonalProjects/bookclub-remastered/node_modules/.pnpm/@prisma+client@5.8.1_prisma@5.8.1/node_modules/@prisma/client/runtime/library.js:125:6151)
    at si.request (/home/eclipse/Documents/PersonalProjects/bookclub-remastered/node_modules/.pnpm/@prisma+client@5.8.1_prisma@5.8.1/node_modules/@prisma/client/runtime/library.js:125:5859)
    at async l (/home/eclipse/Documents/PersonalProjects/bookclub-remastered/node_modules/.pnpm/@prisma+client@5.8.1_prisma@5.8.1/node_modules/@prisma/client/runtime/library.js:130:9805) {
  code: 'P2003',
  clientVersion: '5.8.1',
  meta: { modelName: 'BooksElection', field_name: 'foreign key' }
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `npx ts-node ./src/index.ts`[39m
Ready! Logged in as bookclub#5528
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `npx ts-node ./src/index.ts`[39m
Ready! Logged in as bookclub#5528
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `npx ts-node ./src/index.ts`[39m
Ready! Logged in as bookclub#5528
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `npx ts-node ./src/index.ts`[39m
Ready! Logged in as bookclub#5528
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `npx ts-node ./src/index.ts`[39m
Ready! Logged in as bookclub#5528
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `npx ts-node ./src/index.ts`[39m
Ready! Logged in as bookclub#5528
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `npx ts-node ./src/index.ts`[39m
Ready! Logged in as bookclub#5528
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `npx ts-node ./src/index.ts`[39m
Ready! Logged in as bookclub#5528
